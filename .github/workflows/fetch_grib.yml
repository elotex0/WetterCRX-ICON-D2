name: Fetch ICON-D2 GRIB2 and Generate PNGs

on:
  workflow_dispatch:

jobs:
  fetch_and_generate:
    runs-on: ubuntu-latest
    outputs:
      run: ${{ steps.set_run_date.outputs.run }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'


      - name: Cache Python packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Set RUN and DATE
        id: set_run_date
        run: |
          HOUR=$(date -u +%H)
          case $HOUR in
            00|01|02|03) RUN=00 ;;
            04|05|06) RUN=03 ;;
            07|08|09) RUN=06 ;;
            10|11|12) RUN=09 ;;
            13|14|15) RUN=12 ;;
            16|17|18) RUN=15 ;;
            19|20|21) RUN=18 ;;
            22|23) RUN=21 ;;
          esac
          DATE=$(date -u +%Y%m%d)
          # set env variables
          echo "RUN=$RUN" >> $GITHUB_ENV
          echo "DATE=$DATE" >> $GITHUB_ENV
          # set step output for job output
          echo "run=$RUN" >> $GITHUB_OUTPUT

      - name: Download t2m GRIB2 files
        run: |
          mkdir -p data/t2m
          cd data/t2m
          seq 0 1 | xargs -n 1 -P 12 -I{} bash -c '
            i_padded=$(printf "%03d" {})
            URL="https://opendata.dwd.de/weather/nwp/icon-d2/grib/${{ env.RUN }}/t_2m/icon-d2_germany_regular-lat-lon_single-level_${{ env.DATE }}${{ env.RUN }}_${i_padded}_2d_t_2m.grib2.bz2"
            wget -O t2m_${i_padded}.grib2.bz2 "$URL" || echo "Datei $URL nicht verfügbar, überspringe..."
            if [ -f "t2m_${i_padded}.grib2.bz2" ]; then
              bunzip2 -f t2m_${i_padded}.grib2.bz2
            fi
          '
      
      - name: Download ww GRIB2 files
        run: |
          mkdir -p data/ww
          cd data/ww
          seq 1 2 | xargs -n 1 -P 12 -I{} bash -c '
            i_padded=$(printf "%03d" {})
            URL="https://opendata.dwd.de/weather/nwp/icon-d2/grib/${{ env.RUN }}/ww/icon-d2_germany_regular-lat-lon_single-level_${{ env.DATE }}${{ env.RUN }}_${i_padded}_2d_ww.grib2.bz2"
            wget -O ww_${i_padded}.grib2.bz2 "$URL" || echo "Datei $URL nicht verfügbar, überspringe..."
            if [ -f "ww_${i_padded}.grib2.bz2" ]; then
              bunzip2 -f ww_${i_padded}.grib2.bz2
            fi
          '
      
      - name: Download tp GRIB2 files
        run: |
          mkdir -p data/tp
          cd data/tp
          seq 0 1 | xargs -n 1 -P 12 -I{} bash -c '
            i_padded=$(printf "%03d" {})
            URL="https://opendata.dwd.de/weather/nwp/icon-d2/grib/${{ env.RUN }}/tot_prec/icon-d2_germany_regular-lat-lon_single-level_${{ env.DATE }}${{ env.RUN }}_${i_padded}_2d_tot_prec.grib2.bz2"
            wget -O tot_prec_${i_padded}.grib2.bz2 "$URL" || echo "Datei $URL nicht verfügbar, überspringe..."
            if [ -f "tot_prec_${i_padded}.grib2.bz2" ]; then
              bunzip2 -f tot_prec_${i_padded}.grib2.bz2
            fi
          '

      - name: Download CAPE_ML GRIB2 files
        run: |
          mkdir -p data/cape_ml
          cd data/cape_ml
          seq 0 1 | xargs -n 1 -P 12 -I{} bash -c '
            i_padded=$(printf "%03d" {})
            URL="https://opendata.dwd.de/weather/nwp/icon-d2/grib/${{ env.RUN }}/cape_ml/icon-d2_germany_regular-lat-lon_single-level_${{ env.DATE }}${{ env.RUN }}_${i_padded}_2d_cape_ml.grib2.bz2"
            wget -O cape_${i_padded}.grib2.bz2 "$URL" || echo "Datei $URL nicht verfügbar, überspringe..."
            if [ -f "cape_${i_padded}.grib2.bz2" ]; then
              bunzip2 -f cape_${i_padded}.grib2.bz2
            fi
          '

      - name: Download DBZ_CMAX GRIB2 files
        run: |
          mkdir -p data/dbz_cmax
          cd data/dbz_cmax
          seq 0 1 | xargs -n 1 -P 12 -I{} bash -c '
            i_padded=$(printf "%03d" {})
            URL="https://opendata.dwd.de/weather/nwp/icon-d2/grib/${{ env.RUN }}/dbz_cmax/icon-d2_germany_regular-lat-lon_single-level_${{ env.DATE }}${{ env.RUN }}_${i_padded}_2d_dbz_cmax.grib2.bz2"
            wget -O dbz_cmax_${i_padded}.grib2.bz2 "$URL" || echo "Datei $URL nicht verfügbar, überspringe..."
            if [ -f "dbz_cmax_${i_padded}.grib2.bz2" ]; then
              bunzip2 -f dbz_cmax_${i_padded}.grib2.bz2
            fi
          '
      - name: Download vmax_10m GRIB2 files
        run: |
          mkdir -p data/wind
          cd data/wind
          seq 0 1 | xargs -n 1 -P 12 -I{} bash -c '
            i_padded=$(printf "%03d" {} )
            URL="https://opendata.dwd.de/weather/nwp/icon-d2/grib/${{ env.RUN }}/vmax_10m/icon-d2_germany_regular-lat-lon_single-level_${{ env.DATE }}${{ env.RUN }}_${i_padded}_2d_vmax_10m.grib2.bz2"
            wget -O wind_${i_padded}.grib2.bz2 "$URL" || echo "Datei $URL nicht verfügbar, überspringe..."
            if [ -f "wind_${i_padded}.grib2.bz2" ]; then
              bunzip2 -f wind_${i_padded}.grib2.bz2
            fi
          '
      - name: Download sde GRIB2 files
        run: |
          mkdir -p data/snow
          cd data/snow
          seq 0 1 | xargs -n 1 -P 12 -I{} bash -c '
            i_padded=$(printf "%03d" {} )
            URL="https://opendata.dwd.de/weather/nwp/icon-d2/grib/${{ env.RUN }}/h_snow/icon-d2_germany_regular-lat-lon_single-level_${{ env.DATE }}${{ env.RUN }}_${i_padded}_2d_h_snow.grib2.bz2"
            wget -O snow_${i_padded}.grib2.bz2 "$URL" || echo "Datei $URL nicht verfügbar, überspringe..."
            if [ -f "snow_${i_padded}.grib2.bz2" ]; then
              bunzip2 -f snow_${i_padded}.grib2.bz2
            fi
          '
      - name: Download clct GRIB2 files
        run: |
          mkdir -p data/cloud
          cd data/cloud
          seq 0 1 | xargs -n 1 -P 12 -I{} bash -c '
            i_padded=$(printf "%03d" {} )
            URL="https://opendata.dwd.de/weather/nwp/icon-d2/grib/${{ env.RUN }}/clct/icon-d2_germany_regular-lat-lon_single-level_${{ env.DATE }}${{ env.RUN }}_${i_padded}_2d_clct.grib2.bz2"
            wget -O cloud_${i_padded}.grib2.bz2 "$URL" || echo "Datei $URL nicht verfügbar, überspringe..."
            if [ -f "cloud_${i_padded}.grib2.bz2" ]; then
              bunzip2 -f cloud_${i_padded}.grib2.bz2
            fi
          '
      - name: Download twater GRIB2 files
        run: |
          mkdir -p data/twater
          cd data/twater
          seq 0 1 | xargs -n 1 -P 12 -I{} bash -c '
            i_padded=$(printf "%03d" {} )
            URL="https://opendata.dwd.de/weather/nwp/icon-d2/grib/${{ env.RUN }}/twater/icon-d2_germany_regular-lat-lon_single-level_${{ env.DATE }}${{ env.RUN }}_${i_padded}_2d_twater.grib2.bz2"
            wget -O twater_${i_padded}.grib2.bz2 "$URL" || echo "Datei $URL nicht verfügbar, überspringe..."
            if [ -f "twater_${i_padded}.grib2.bz2" ]; then
              bunzip2 -f twater_${i_padded}.grib2.bz2
            fi
          '

      - name: Generate PNGs
        run: |
          mkdir -p icond2/${{ env.RUN }}/t2m
          mkdir -p icond2/${{ env.RUN }}/ww
          mkdir -p icond2/${{ env.RUN }}/tp
          mkdir -p icond2/${{ env.RUN }}/tp_acc
          mkdir -p icond2/${{ env.RUN }}/cape_ml
          mkdir -p icond2/${{ env.RUN }}/dbz_cmax
          mkdir -p icond2/${{ env.RUN }}/wind
          mkdir -p icond2/${{ env.RUN }}/snow
          mkdir -p icond2/${{ env.RUN }}/cloud
          mkdir -p icond2/${{ env.RUN }}/twater

          python scripts/generate_pngs.py data/t2m icond2/${{ env.RUN }}/t2m t2m
          python scripts/generate_pngs.py data/ww icond2/${{ env.RUN }}/ww ww
          python scripts/generate_pngs.py data/tp icond2/${{ env.RUN }}/tp tp
          python scripts/generate_pngs.py data/tp icond2/${{ env.RUN }}/tp_acc tp_acc
          python scripts/generate_pngs.py data/cape_ml icond2/${{ env.RUN }}/cape_ml cape_ml
          python scripts/generate_pngs.py data/dbz_cmax icond2/${{ env.RUN }}/dbz_cmax dbz_cmax
          python scripts/generate_pngs.py data/wind icond2/${{ env.RUN }}/wind wind
          python scripts/generate_pngs.py data/snow icond2/${{ env.RUN }}/snow snow
          python scripts/generate_pngs.py data/cloud icond2/${{ env.RUN }}/cloud cloud
          python scripts/generate_pngs.py data/twater icond2/${{ env.RUN }}/twater twater

      - name: Upload PNGs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: icond2
          path: icond2


        # --------- Delete GRIB2 Files ---------
      - name: Delete GRIB2 files
        run: rm -rf data/

  deploy_to_r2:
    runs-on: ubuntu-latest
    needs: fetch_and_generate
    steps:
      - name: Download PNGs artifact
        uses: actions/download-artifact@v4
        with:
          name: icond2
          path: ./icond2/${{ needs.fetch_and_generate.outputs.run }}

      - name: Upload PNGs to Cloudflare R2
        run: |
          aws s3 sync ./icond2/${{ needs.fetch_and_generate.outputs.run }} s3://${{ secrets.R2_BUCKET }}/icon-d2/${{ needs.fetch_and_generate.outputs.run }}/ \
          --endpoint-url https://${{ secrets.R2_ACCOUNT_ID }}.r2.cloudflarestorage.com
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
